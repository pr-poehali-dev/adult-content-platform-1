import { useState, useEffect } from 'react';
import { useToast } from '@/hooks/use-toast';
import { GoogleOAuthProvider, useGoogleLogin } from '@react-oauth/google';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Switch } from '@/components/ui/switch';
import { Label } from '@/components/ui/label';
import Icon from '@/components/ui/icon';

const IndexContent = () => {
  const [activeTab, setActiveTab] = useState('home');
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedPlan, setSelectedPlan] = useState<any>(null);
  const [phoneNumber, setPhoneNumber] = useState('');
  const [isProcessing, setIsProcessing] = useState(false);
  const [user, setUser] = useState<any>(null);
  const [showLogin, setShowLogin] = useState(false);
  const [showRoleSelection, setShowRoleSelection] = useState(false);
  const { toast } = useToast();

  useEffect(() => {
    const savedUser = localStorage.getItem('user');
    if (savedUser) {
      setUser(JSON.parse(savedUser));
    }
  }, []);

  const login = useGoogleLogin({
    onSuccess: async (tokenResponse) => {
      try {
        const userInfoResponse = await fetch('https://www.googleapis.com/oauth2/v3/userinfo', {
          headers: { Authorization: `Bearer ${tokenResponse.access_token}` },
        });
        const userInfo = await userInfoResponse.json();

        const authResponse = await fetch('https://functions.poehali.dev/b0db3f19-a754-4433-b11a-f3ad966cc6a5', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            token: tokenResponse.access_token,
            name: userInfo.name,
            email: userInfo.email,
            picture: userInfo.picture,
            google_id: userInfo.sub,
          }),
        });

        const userData = await authResponse.json();
        
        if (!userData.role) {
          setUser(userData);
          localStorage.setItem('user', JSON.stringify(userData));
          setShowLogin(false);
          setShowRoleSelection(true);
        } else {
          setUser(userData);
          localStorage.setItem('user', JSON.stringify(userData));
          setShowLogin(false);
          toast({
            title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!',
            description: `–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ ${userData.name}`,
          });
        }
      } catch (error) {
        toast({
          title: '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞',
          description: '–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google',
          variant: 'destructive',
        });
      }
    },
  });

  const loginYandex = () => {
    const clientId = 'YOUR_YANDEX_CLIENT_ID';
    const redirectUri = encodeURIComponent(window.location.origin + '/yandex-callback');
    const yandexAuthUrl = `https://oauth.yandex.ru/authorize?response_type=code&client_id=${clientId}&redirect_uri=${redirectUri}`;
    
    const width = 500;
    const height = 600;
    const left = window.screen.width / 2 - width / 2;
    const top = window.screen.height / 2 - height / 2;
    
    const popup = window.open(
      yandexAuthUrl,
      'Yandex Login',
      `width=${width},height=${height},left=${left},top=${top}`
    );

    const messageHandler = async (event: MessageEvent) => {
      if (event.origin !== window.location.origin) return;
      
      if (event.data.type === 'YANDEX_AUTH_CODE') {
        try {
          const authResponse = await fetch('https://functions.poehali.dev/d25137a4-fa31-4ec7-bd38-5439950b9e3a', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              code: event.data.code,
              redirect_uri: window.location.origin + '/yandex-callback'
            }),
          });

          const userData = await authResponse.json();
          
          if (authResponse.ok) {
            if (!userData.role) {
              setUser(userData);
              localStorage.setItem('user', JSON.stringify(userData));
              setShowLogin(false);
              setShowRoleSelection(true);
            } else {
              setUser(userData);
              localStorage.setItem('user', JSON.stringify(userData));
              setShowLogin(false);
              toast({
                title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!',
                description: `–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ ${userData.name}`,
              });
            }
          } else {
            throw new Error(userData.message || 'Auth failed');
          }
        } catch (error) {
          toast({
            title: '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞',
            description: '–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å',
            variant: 'destructive',
          });
        }
        
        window.removeEventListener('message', messageHandler);
        if (popup) popup.close();
      }
    };

    window.addEventListener('message', messageHandler);
  };

  const logout = () => {
    setUser(null);
    localStorage.removeItem('user');
    toast({
      title: '–í—ã –≤—ã—à–ª–∏',
      description: '–î–æ —Å–∫–æ—Ä–æ–π –≤—Å—Ç—Ä–µ—á–∏!',
    });
  };

  const subscriptionPlans = [
    {
      name: 'Silver',
      price: '990',
      features: ['–ë–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Ç–µ–Ω—Ç—É', 'HD –∫–∞—á–µ—Å—Ç–≤–æ', '–ë–∞–∑–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞'],
      color: 'platinum'
    },
    {
      name: 'Gold',
      price: '2990',
      features: ['–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Ç–µ–Ω—Ç—É', '4K –∫–∞—á–µ—Å—Ç–≤–æ', '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞', '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'],
      color: 'gold',
      popular: true
    },
    {
      name: 'Platinum',
      price: '5990',
      features: ['–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø', '8K –∫–∞—á–µ—Å—Ç–≤–æ', 'VIP –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7', '–†–∞–Ω–Ω–∏–π –¥–æ—Å—Ç—É–ø', '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏'],
      color: 'primary'
    }
  ];

  const creators = [
    { name: 'Anastasia K.', subscribers: '125K', avatar: 'üëë', verified: true },
    { name: 'Victoria M.', subscribers: '98K', avatar: 'üíé', verified: true },
    { name: 'Elena S.', subscribers: '87K', avatar: '‚≠ê', verified: true },
    { name: 'Maria L.', subscribers: '76K', avatar: 'üåü', verified: false }
  ];

  const galleryItems = [
    { id: 1, title: 'Exclusive Set #1', views: '45K', locked: false, premium: true },
    { id: 2, title: 'Premium Collection', views: '38K', locked: true, premium: true },
    { id: 3, title: 'Elite Series', views: '52K', locked: false, premium: true },
    { id: 4, title: 'VIP Content', views: '61K', locked: true, premium: true }
  ];

  return (
    <div className="min-h-screen bg-background">
      <nav className="glass-effect sticky top-0 z-50 border-b border-border">
        <div className="container mx-auto px-4 py-4 flex items-center justify-between">
          <h1 className="text-3xl font-serif font-bold bg-gradient-to-r from-gold to-primary bg-clip-text text-transparent">
            √âlite
          </h1>
          
          <div className="hidden md:flex items-center gap-6">
            <Button variant="ghost" onClick={() => setActiveTab('home')} className="text-foreground hover:text-primary">
              <Icon name="Home" size={18} className="mr-2" />
              –ì–ª–∞–≤–Ω–∞—è
            </Button>
            <Button variant="ghost" onClick={() => setActiveTab('gallery')} className="text-foreground hover:text-primary">
              <Icon name="Image" size={18} className="mr-2" />
              –ì–∞–ª–µ—Ä–µ—è
            </Button>
            <Button variant="ghost" onClick={() => setActiveTab('creators')} className="text-foreground hover:text-primary">
              <Icon name="Users" size={18} className="mr-2" />
              –ü—Ä–æ—Ñ–∏–ª–∏
            </Button>
            <Button variant="ghost" onClick={() => setActiveTab('subscriptions')} className="text-foreground hover:text-primary">
              <Icon name="Crown" size={18} className="mr-2" />
              –ü–æ–¥–ø–∏—Å–∫–∏
            </Button>
          </div>

          <div className="flex items-center gap-3">
            <Button variant="ghost" onClick={() => setActiveTab('search')} size="icon">
              <Icon name="Search" size={20} />
            </Button>
            <Button variant="ghost" onClick={() => setActiveTab('settings')} size="icon">
              <Icon name="Settings" size={20} />
            </Button>
            {user ? (
              <div className="flex items-center gap-3">
                <img src={user.avatar_url} alt={user.name} className="w-8 h-8 rounded-full" />
                <Button variant="ghost" onClick={logout} size="sm">
                  –í—ã–π—Ç–∏
                </Button>
              </div>
            ) : (
              <Button className="bg-gold hover:bg-gold/90 text-background font-medium" onClick={() => setShowLogin(true)}>
                –í–æ–π—Ç–∏
              </Button>
            )}
          </div>
        </div>
      </nav>

      <main className="container mx-auto px-4 py-8">
        {activeTab === 'home' && (
          <div className="space-y-12 animate-fade-in">
            <section className="relative overflow-hidden rounded-2xl premium-gradient p-12 md:p-20 text-center">
              <div className="absolute inset-0 opacity-10">
                <div className="absolute top-1/4 left-1/4 w-96 h-96 bg-gold rounded-full blur-3xl"></div>
                <div className="absolute bottom-1/4 right-1/4 w-96 h-96 bg-primary rounded-full blur-3xl"></div>
              </div>
              
              <div className="relative z-10">
                <Badge className="mb-4 bg-gold/20 text-gold border-gold/30">–ü—Ä–µ–º–∏—É–º –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞</Badge>
                <h2 className="text-5xl md:text-7xl font-serif font-bold mb-6 bg-gradient-to-r from-gold via-platinum to-primary bg-clip-text text-transparent">
                  –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
                </h2>
                <p className="text-xl md:text-2xl text-muted-foreground mb-8 max-w-2xl mx-auto">
                  –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —ç–ª–∏—Ç–Ω–æ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π –∏ —Ü–µ–Ω–∏—Ç–µ–ª–µ–π —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                </p>
                <div className="flex gap-4 justify-center flex-wrap">
                  <Button size="lg" className="bg-gold hover:bg-gold/90 text-background font-semibold text-lg px-8">
                    <Icon name="Sparkles" size={20} className="mr-2" />
                    –ù–∞—á–∞—Ç—å
                  </Button>
                  <Button size="lg" variant="outline" className="border-gold text-gold hover:bg-gold/10 text-lg px-8">
                    –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ
                  </Button>
                </div>
              </div>
            </section>

            <section>
              <div className="flex items-center justify-between mb-6">
                <h3 className="text-3xl font-serif font-bold">–¢–æ–ø —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π</h3>
                <Button variant="ghost" className="text-primary">
                  –í—Å–µ <Icon name="ArrowRight" size={18} className="ml-2" />
                </Button>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                {creators.map((creator, idx) => (
                  <Card key={idx} className="glass-effect hover:border-gold/30 transition-all cursor-pointer group">
                    <CardContent className="pt-6">
                      <div className="text-center">
                        <div className="text-6xl mb-4 group-hover:scale-110 transition-transform">{creator.avatar}</div>
                        <div className="flex items-center justify-center gap-2 mb-2">
                          <h4 className="font-semibold text-lg">{creator.name}</h4>
                          {creator.verified && <Icon name="BadgeCheck" size={18} className="text-gold" />}
                        </div>
                        <p className="text-muted-foreground text-sm">{creator.subscribers} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤</p>
                        <Button className="w-full mt-4 bg-primary/20 hover:bg-primary/30 text-primary border border-primary/30">
                          –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
                        </Button>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </section>

            <section className="glass-effect p-8 rounded-2xl">
              <div className="text-center max-w-3xl mx-auto">
                <Icon name="Shield" size={48} className="mx-auto mb-4 text-gold" />
                <h3 className="text-2xl font-serif font-bold mb-4">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å</h3>
                <p className="text-muted-foreground mb-6">
                  –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–µ—Ä–µ–¥–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∑–∞—â–∏—Ç—ã –¥–∞–Ω–Ω—ã—Ö. 
                  –í–∞—à –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –ª–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞—Ö–æ–¥—è—Ç—Å—è –ø–æ–¥ –Ω–∞–¥—ë–∂–Ω–æ–π –∑–∞—â–∏—Ç–æ–π.
                </p>
                <div className="flex gap-8 justify-center flex-wrap">
                  <div className="text-center">
                    <Icon name="Lock" size={32} className="mx-auto mb-2 text-primary" />
                    <p className="text-sm font-medium">End-to-end —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ</p>
                  </div>
                  <div className="text-center">
                    <Icon name="Eye" size={32} className="mx-auto mb-2 text-primary" />
                    <p className="text-sm font-medium">–ö–æ–Ω—Ç—Ä–æ–ª—å –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏</p>
                  </div>
                  <div className="text-center">
                    <Icon name="Server" size={32} className="mx-auto mb-2 text-primary" />
                    <p className="text-sm font-medium">–ó–∞—â–∏—â—ë–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞</p>
                  </div>
                </div>
              </div>
            </section>
          </div>
        )}

        {activeTab === 'gallery' && (
          <div className="space-y-6 animate-fade-in">
            <div className="flex items-center justify-between">
              <h2 className="text-4xl font-serif font-bold">–ì–∞–ª–µ—Ä–µ—è</h2>
              <div className="flex gap-2">
                <Button variant="outline" size="sm">
                  <Icon name="Filter" size={16} className="mr-2" />
                  –§–∏–ª—å—Ç—Ä—ã
                </Button>
                <Button variant="outline" size="sm">
                  <Icon name="SlidersHorizontal" size={16} className="mr-2" />
                  –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
                </Button>
              </div>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {galleryItems.map((item) => (
                <Card key={item.id} className="group cursor-pointer overflow-hidden glass-effect hover:border-gold/30 transition-all">
                  <div className="aspect-video bg-gradient-to-br from-muted to-muted/50 relative overflow-hidden">
                    <div className="absolute inset-0 bg-gradient-to-t from-background via-transparent to-transparent opacity-60"></div>
                    {item.locked && (
                      <div className="absolute inset-0 backdrop-blur-md flex items-center justify-center">
                        <Icon name="Lock" size={48} className="text-gold" />
                      </div>
                    )}
                    {item.premium && (
                      <Badge className="absolute top-3 right-3 bg-gold text-background">
                        <Icon name="Crown" size={14} className="mr-1" />
                        Premium
                      </Badge>
                    )}
                    <div className="absolute bottom-3 left-3 right-3">
                      <h4 className="font-semibold mb-1">{item.title}</h4>
                      <div className="flex items-center gap-2 text-sm text-muted-foreground">
                        <Icon name="Eye" size={14} />
                        <span>{item.views}</span>
                      </div>
                    </div>
                  </div>
                </Card>
              ))}
            </div>
          </div>
        )}

        {activeTab === 'creators' && (
          <div className="space-y-6 animate-fade-in">
            <h2 className="text-4xl font-serif font-bold mb-8">–ü—Ä–æ—Ñ–∏–ª–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {creators.map((creator, idx) => (
                <Card key={idx} className="glass-effect hover:border-gold/30 transition-all">
                  <CardHeader>
                    <div className="flex items-start gap-4">
                      <div className="text-5xl">{creator.avatar}</div>
                      <div className="flex-1">
                        <div className="flex items-center gap-2 mb-1">
                          <CardTitle>{creator.name}</CardTitle>
                          {creator.verified && <Icon name="BadgeCheck" size={20} className="text-gold" />}
                        </div>
                        <CardDescription>{creator.subscribers} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤</CardDescription>
                      </div>
                      <Button size="sm" className="bg-gold hover:bg-gold/90 text-background">
                        –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
                      </Button>
                    </div>
                  </CardHeader>
                  <CardContent>
                    <p className="text-sm text-muted-foreground mb-4">
                      –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –ø—Ä–µ–º–∏—É–º –∫–æ–Ω—Ç–µ–Ω—Ç. –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º–∏.
                    </p>
                    <div className="flex gap-2">
                      <Button variant="outline" size="sm" className="flex-1">
                        <Icon name="MessageCircle" size={16} className="mr-2" />
                        –°–æ–æ–±—â–µ–Ω–∏–µ
                      </Button>
                      <Button variant="outline" size="sm" className="flex-1">
                        <Icon name="Gift" size={16} className="mr-2" />
                        –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å
                      </Button>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        )}

        {activeTab === 'subscriptions' && (
          <div className="space-y-8 animate-fade-in">
            <div className="text-center max-w-2xl mx-auto mb-12">
              <h2 className="text-4xl md:text-5xl font-serif font-bold mb-4">–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É</h2>
              <p className="text-muted-foreground text-lg">
                –ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É –ø—Ä–µ–º–∏—É–º-–∫–∞—á–µ—Å—Ç–≤–∞
              </p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-6xl mx-auto">
              {subscriptionPlans.map((plan, idx) => (
                <Card 
                  key={idx} 
                  className={`relative overflow-hidden ${plan.popular ? 'border-gold shadow-lg shadow-gold/20 scale-105' : 'glass-effect'}`}
                >
                  {plan.popular && (
                    <div className="absolute top-0 right-0 bg-gold text-background px-4 py-1 text-sm font-semibold">
                      –ü–æ–ø—É–ª—è—Ä–Ω—ã–π
                    </div>
                  )}
                  <CardHeader className="text-center pb-8 pt-8">
                    <CardTitle className="text-2xl font-serif mb-2">{plan.name}</CardTitle>
                    <div className="text-4xl font-bold font-serif mb-2">
                      <span className="text-gold">{plan.price}</span>
                      <span className="text-lg text-muted-foreground font-normal"> ‚ÇΩ/–º–µ—Å</span>
                    </div>
                  </CardHeader>
                  <CardContent>
                    <ul className="space-y-3 mb-6">
                      {plan.features.map((feature, i) => (
                        <li key={i} className="flex items-start gap-2">
                          <Icon name="Check" size={20} className="text-gold mt-0.5 flex-shrink-0" />
                          <span className="text-sm">{feature}</span>
                        </li>
                      ))}
                    </ul>
                    <Button 
                      className={`w-full ${plan.popular ? 'bg-gold hover:bg-gold/90 text-background' : 'bg-primary/20 hover:bg-primary/30 text-primary border border-primary/30'}`}
                      size="lg"
                      onClick={() => setSelectedPlan(plan)}
                    >
                      –í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω
                    </Button>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        )}

        {activeTab === 'search' && (
          <div className="space-y-6 animate-fade-in">
            <div className="max-w-2xl mx-auto">
              <h2 className="text-4xl font-serif font-bold mb-6 text-center">–ü–æ–∏—Å–∫</h2>
              <div className="relative">
                <Icon name="Search" size={20} className="absolute left-4 top-1/2 -translate-y-1/2 text-muted-foreground" />
                <Input
                  type="text"
                  placeholder="–ù–∞–π—Ç–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π, –∫–æ–Ω—Ç–µ–Ω—Ç..."
                  className="pl-12 h-14 text-lg glass-effect border-gold/20 focus:border-gold"
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                />
              </div>

              <div className="mt-8 space-y-4">
                <h3 className="text-sm font-semibold text-muted-foreground">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã</h3>
                <div className="flex flex-wrap gap-2">
                  {['–§–æ—Ç–æ—Å–µ—Ç—ã', '–í–∏–¥–µ–æ', '–≠–∫—Å–∫–ª—é–∑–∏–≤', '4K', '–ù–æ–≤–∏–Ω–∫–∏'].map((tag) => (
                    <Badge key={tag} variant="outline" className="cursor-pointer hover:bg-gold/10 hover:border-gold">
                      {tag}
                    </Badge>
                  ))}
                </div>
              </div>
            </div>
          </div>
        )}

        {activeTab === 'settings' && (
          <div className="max-w-3xl mx-auto space-y-6 animate-fade-in">
            <h2 className="text-4xl font-serif font-bold mb-8">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h2>

            <Card className="glass-effect">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Icon name="Shield" size={24} className="text-gold" />
                  –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
                </CardTitle>
                <CardDescription>
                  –£–ø—Ä–∞–≤–ª—è–π—Ç–µ –≤–∏–¥–∏–º–æ—Å—Ç—å—é –≤–∞—à–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ –¥–∞–Ω–Ω—ã–º–∏
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="flex items-center justify-between">
                  <div className="space-y-1">
                    <Label htmlFor="private-profile" className="text-base font-medium">–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å</Label>
                    <p className="text-sm text-muted-foreground">–¢–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏ –≤–∏–¥—è—Ç –≤–∞—à –∫–æ–Ω—Ç–µ–Ω—Ç</p>
                  </div>
                  <Switch id="private-profile" />
                </div>

                <div className="flex items-center justify-between">
                  <div className="space-y-1">
                    <Label htmlFor="watermark" className="text-base font-medium">–í–æ–¥—è–Ω—ã–µ –∑–Ω–∞–∫–∏</Label>
                    <p className="text-sm text-muted-foreground">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞—â–∏—Ç–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞</p>
                  </div>
                  <Switch id="watermark" defaultChecked />
                </div>

                <div className="flex items-center justify-between">
                  <div className="space-y-1">
                    <Label htmlFor="download-protect" className="text-base font-medium">–ó–∞—â–∏—Ç–∞ –æ—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏—è</Label>
                    <p className="text-sm text-muted-foreground">–ó–∞–ø—Ä–µ—Ç–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞</p>
                  </div>
                  <Switch id="download-protect" defaultChecked />
                </div>

                <div className="flex items-center justify-between">
                  <div className="space-y-1">
                    <Label htmlFor="geo-block" className="text-base font-medium">–ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è</Label>
                    <p className="text-sm text-muted-foreground">–û–≥—Ä–∞–Ω–∏—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º</p>
                  </div>
                  <Switch id="geo-block" />
                </div>

                <div className="flex items-center justify-between">
                  <div className="space-y-1">
                    <Label htmlFor="two-factor" className="text-base font-medium">–î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</Label>
                    <p className="text-sm text-muted-foreground">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –∞–∫–∫–∞—É–Ω—Ç–∞</p>
                  </div>
                  <Switch id="two-factor" />
                </div>
              </CardContent>
            </Card>

            <Card className="glass-effect">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Icon name="Bell" size={24} className="text-gold" />
                  –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="flex items-center justify-between">
                  <div className="space-y-1">
                    <Label htmlFor="new-subscribers" className="text-base font-medium">–ù–æ–≤—ã–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏</Label>
                    <p className="text-sm text-muted-foreground">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –ø–æ–¥–ø–∏—Å–∫–∞—Ö</p>
                  </div>
                  <Switch id="new-subscribers" defaultChecked />
                </div>

                <div className="flex items-center justify-between">
                  <div className="space-y-1">
                    <Label htmlFor="messages" className="text-base font-medium">–°–æ–æ–±—â–µ–Ω–∏—è</Label>
                    <p className="text-sm text-muted-foreground">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö</p>
                  </div>
                  <Switch id="messages" defaultChecked />
                </div>

                <div className="flex items-center justify-between">
                  <div className="space-y-1">
                    <Label htmlFor="tips" className="text-base font-medium">–î–æ–Ω–∞—Ç—ã</Label>
                    <p className="text-sm text-muted-foreground">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ</p>
                  </div>
                  <Switch id="tips" defaultChecked />
                </div>
              </CardContent>
            </Card>
          </div>
        )}

        {selectedPlan && (
          <div className="fixed inset-0 bg-background/80 backdrop-blur-sm z-50 flex items-center justify-center p-4 animate-fade-in">
            <Card className="glass-effect max-w-md w-full border-gold/30">
              <CardHeader>
                <div className="flex items-center justify-between">
                  <CardTitle className="text-2xl font-serif">–û–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏</CardTitle>
                  <Button variant="ghost" size="icon" onClick={() => setSelectedPlan(null)}>
                    <Icon name="X" size={20} />
                  </Button>
                </div>
                <CardDescription>
                  –ü–ª–∞–Ω {selectedPlan.name} ‚Äî {selectedPlan.price} ‚ÇΩ/–º–µ—Å
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="space-y-2">
                  <Label htmlFor="phone">–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –°–ë–ü</Label>
                  <Input
                    id="phone"
                    type="tel"
                    placeholder="+7 999 123 45 67"
                    value={phoneNumber}
                    onChange={(e) => setPhoneNumber(e.target.value)}
                    className="glass-effect border-gold/20"
                  />
                  <p className="text-xs text-muted-foreground">
                    –ù–∞ —ç—Ç–æ—Ç –Ω–æ–º–µ—Ä –ø—Ä–∏–¥—ë—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–ø–ª–∞—Ç—É —á–µ—Ä–µ–∑ –°–ë–ü
                  </p>
                </div>

                <div className="space-y-2">
                  <div className="flex items-center justify-between text-sm">
                    <span className="text-muted-foreground">–ü–æ–¥–ø–∏—Å–∫–∞ {selectedPlan.name}</span>
                    <span>{selectedPlan.price} ‚ÇΩ</span>
                  </div>
                  <div className="flex items-center justify-between text-sm">
                    <span className="text-muted-foreground">–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è</span>
                    <span>1 –º–µ—Å—è—Ü</span>
                  </div>
                  <div className="border-t border-border pt-2 mt-2">
                    <div className="flex items-center justify-between font-semibold">
                      <span>–ò—Ç–æ–≥–æ</span>
                      <span className="text-gold text-lg">{selectedPlan.price} ‚ÇΩ</span>
                    </div>
                  </div>
                </div>

                <Button 
                  className="w-full bg-gold hover:bg-gold/90 text-background"
                  size="lg"
                  disabled={!phoneNumber || isProcessing}
                  onClick={async () => {
                    setIsProcessing(true);
                    try {
                      const response = await fetch('https://functions.poehali.dev/a8e2dea6-bbf6-4ec4-8575-34146fdf076b', {
                        method: 'POST',
                        headers: {
                          'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                          amount: parseInt(selectedPlan.price),
                          description: `–ü–æ–¥–ø–∏—Å–∫–∞ ${selectedPlan.name} –Ω–∞ 1 –º–µ—Å—è—Ü`,
                          customer_phone: phoneNumber,
                          plan_name: selectedPlan.name
                        })
                      });

                      const data = await response.json();

                      if (response.ok && data.payment_url) {
                        toast({
                          title: '–ü–ª–∞—Ç—ë–∂ —Å–æ–∑–¥–∞–Ω!',
                          description: '–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–∞–Ω–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã',
                        });
                        window.open(data.payment_url, '_blank');
                        setTimeout(() => {
                          setSelectedPlan(null);
                          setPhoneNumber('');
                        }, 2000);
                      } else {
                        toast({
                          title: '–û—à–∏–±–∫–∞',
                          description: data.message || '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–ª–∞—Ç—ë–∂',
                          variant: 'destructive',
                        });
                      }
                    } catch (error) {
                      toast({
                        title: '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏',
                        description: '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É',
                        variant: 'destructive',
                      });
                    } finally {
                      setIsProcessing(false);
                    }
                  }}
                >
                  {isProcessing ? (
                    <>
                      <Icon name="Loader2" size={20} className="mr-2 animate-spin" />
                      –û–±—Ä–∞–±–æ—Ç–∫–∞...
                    </>
                  ) : (
                    <>
                      <Icon name="Smartphone" size={20} className="mr-2" />
                      –û–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑ –°–ë–ü
                    </>
                  )}
                </Button>

                <div className="flex items-center gap-2 text-xs text-muted-foreground">
                  <Icon name="Shield" size={14} className="text-gold" />
                  <span>–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –°–∏—Å—Ç–µ–º—É –ë—ã—Å—Ç—Ä—ã—Ö –ü–ª–∞—Ç–µ–∂–µ–π</span>
                </div>
              </CardContent>
            </Card>
          </div>
        )}

        {showLogin && (
          <div className="fixed inset-0 bg-background/80 backdrop-blur-sm z-50 flex items-center justify-center p-4 animate-fade-in">
            <Card className="glass-effect max-w-md w-full border-gold/30">
              <CardHeader>
                <div className="flex items-center justify-between">
                  <CardTitle className="text-2xl font-serif">–í—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç</CardTitle>
                  <Button variant="ghost" size="icon" onClick={() => setShowLogin(false)}>
                    <Icon name="X" size={20} />
                  </Button>
                </div>
                <CardDescription>
                  –í–æ–π–¥–∏—Ç–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <Button 
                  className="w-full bg-white hover:bg-gray-100 text-gray-900 border border-gray-300"
                  size="lg"
                  onClick={() => login()}
                >
                  <svg className="w-5 h-5 mr-2" viewBox="0 0 24 24">
                    <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
                    <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
                    <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
                    <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
                  </svg>
                  –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google
                </Button>

                <Button 
                  className="w-full bg-black hover:bg-gray-900 text-white"
                  size="lg"
                  onClick={loginYandex}
                >
                  <svg className="w-5 h-5 mr-2" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 12-5.4 12-12S18.6 0 12 0zm3.9 16.5h-2.5l-3.4-5.5v5.5H7.5V7.5h2.5l3.4 5.5V7.5h2.5v9z"/>
                  </svg>
                  –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å
                </Button>

                <div className="text-center text-xs text-muted-foreground">
                  –ù–∞–∂–∏–º–∞—è "–í–æ–π—Ç–∏", –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ –ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                </div>
              </CardContent>
            </Card>
          </div>
        )}

        {showRoleSelection && (
          <div className="fixed inset-0 bg-background/80 backdrop-blur-sm z-50 flex items-center justify-center p-4 animate-fade-in">
            <Card className="glass-effect max-w-2xl w-full border-gold/30">
              <CardHeader className="text-center">
                <CardTitle className="text-3xl font-serif">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ √âlite!</CardTitle>
                <CardDescription className="text-base mt-2">
                  –í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid md:grid-cols-2 gap-6">
                  <Card className="cursor-pointer hover:border-gold transition-all hover:shadow-lg group" onClick={async () => {
                    try {
                      const response = await fetch('https://functions.poehali.dev/b0db3f19-a754-4433-b11a-f3ad966cc6a5', {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                          user_id: user.id,
                          role: 'viewer'
                        })
                      });

                      if (response.ok) {
                        const updatedUser = { ...user, role: 'viewer' };
                        setUser(updatedUser);
                        localStorage.setItem('user', JSON.stringify(updatedUser));
                        setShowRoleSelection(false);
                        toast({
                          title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!',
                          description: '–í—ã –º–æ–∂–µ—Ç–µ —Å–º–æ—Ç—Ä–µ—Ç—å —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç',
                        });
                      }
                    } catch (error) {
                      toast({
                        title: '–û—à–∏–±–∫–∞',
                        description: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—ã–±–æ—Ä',
                        variant: 'destructive',
                      });
                    }
                  }}>
                    <CardHeader>
                      <div className="w-16 h-16 rounded-full bg-primary/10 flex items-center justify-center mb-4 mx-auto group-hover:bg-primary/20 transition-colors">
                        <Icon name="Eye" size={32} className="text-primary" />
                      </div>
                      <CardTitle className="text-center text-xl">–Ø –∑—Ä–∏—Ç–µ–ª—å</CardTitle>
                      <CardDescription className="text-center">
                        –•–æ—á—É —Å–º–æ—Ç—Ä–µ—Ç—å —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –æ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π
                      </CardDescription>
                    </CardHeader>
                    <CardContent className="space-y-2">
                      <div className="flex items-start gap-2 text-sm text-muted-foreground">
                        <Icon name="Check" size={16} className="text-gold mt-0.5 shrink-0" />
                        <span>–î–æ—Å—Ç—É–ø –∫ –≥–∞–ª–µ—Ä–µ–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞</span>
                      </div>
                      <div className="flex items-start gap-2 text-sm text-muted-foreground">
                        <Icon name="Check" size={16} className="text-gold mt-0.5 shrink-0" />
                        <span>–ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π</span>
                      </div>
                      <div className="flex items-start gap-2 text-sm text-muted-foreground">
                        <Icon name="Check" size={16} className="text-gold mt-0.5 shrink-0" />
                        <span>–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã</span>
                      </div>
                    </CardContent>
                  </Card>

                  <Card className="cursor-pointer hover:border-gold transition-all hover:shadow-lg group" onClick={async () => {
                    try {
                      const response = await fetch('https://functions.poehali.dev/b0db3f19-a754-4433-b11a-f3ad966cc6a5', {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                          user_id: user.id,
                          role: 'creator'
                        })
                      });

                      if (response.ok) {
                        const updatedUser = { ...user, role: 'creator' };
                        setUser(updatedUser);
                        localStorage.setItem('user', JSON.stringify(updatedUser));
                        setShowRoleSelection(false);
                        toast({
                          title: '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!',
                          description: '–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç',
                        });
                      }
                    } catch (error) {
                      toast({
                        title: '–û—à–∏–±–∫–∞',
                        description: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—ã–±–æ—Ä',
                        variant: 'destructive',
                      });
                    }
                  }}>
                    <CardHeader>
                      <div className="w-16 h-16 rounded-full bg-gold/10 flex items-center justify-center mb-4 mx-auto group-hover:bg-gold/20 transition-colors">
                        <Icon name="Upload" size={32} className="text-gold" />
                      </div>
                      <CardTitle className="text-center text-xl">–Ø —Å–æ–∑–¥–∞—Ç–µ–ª—å</CardTitle>
                      <CardDescription className="text-center">
                        –•–æ—á—É –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å
                      </CardDescription>
                    </CardHeader>
                    <CardContent className="space-y-2">
                      <div className="flex items-start gap-2 text-sm text-muted-foreground">
                        <Icon name="Check" size={16} className="text-gold mt-0.5 shrink-0" />
                        <span>–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞</span>
                      </div>
                      <div className="flex items-start gap-2 text-sm text-muted-foreground">
                        <Icon name="Check" size={16} className="text-gold mt-0.5 shrink-0" />
                        <span>–ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–æ–∫</span>
                      </div>
                      <div className="flex items-start gap-2 text-sm text-muted-foreground">
                        <Icon name="Check" size={16} className="text-gold mt-0.5 shrink-0" />
                        <span>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</span>
                      </div>
                    </CardContent>
                  </Card>
                </div>

                <div className="mt-6 text-center text-sm text-muted-foreground">
                  –í—ã —Å–º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –ø–æ–∑–∂–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–æ—Ñ–∏–ª—è
                </div>
              </CardContent>
            </Card>
          </div>
        )}
      </main>

      <footer className="mt-20 border-t border-border">
        <div className="container mx-auto px-4 py-12">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
            <div>
              <h3 className="text-2xl font-serif font-bold bg-gradient-to-r from-gold to-primary bg-clip-text text-transparent mb-4">
                √âlite
              </h3>
              <p className="text-sm text-muted-foreground">
                –ü—Ä–µ–º–∏—É–º –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
              </p>
            </div>
            <div>
              <h4 className="font-semibold mb-4">–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞</h4>
              <ul className="space-y-2 text-sm text-muted-foreground">
                <li><a href="#" className="hover:text-primary transition-colors">–û –Ω–∞—Å</a></li>
                <li><a href="#" className="hover:text-primary transition-colors">–ë–ª–æ–≥</a></li>
                <li><a href="#" className="hover:text-primary transition-colors">–ö–∞—Ä—å–µ—Ä–∞</a></li>
              </ul>
            </div>
            <div>
              <h4 className="font-semibold mb-4">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</h4>
              <ul className="space-y-2 text-sm text-muted-foreground">
                <li><a href="#" className="hover:text-primary transition-colors">–ü–æ–º–æ—â—å</a></li>
                <li><a href="#" className="hover:text-primary transition-colors">–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</a></li>
                <li><a href="#" className="hover:text-primary transition-colors">–ü—Ä–∞–≤–∏–ª–∞</a></li>
              </ul>
            </div>
            <div>
              <h4 className="font-semibold mb-4">–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h4>
              <ul className="space-y-2 text-sm text-muted-foreground">
                <li><a href="#" className="hover:text-primary transition-colors">–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</a></li>
                <li><a href="#" className="hover:text-primary transition-colors">–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å</a></li>
                <li><a href="#" className="hover:text-primary transition-colors">Cookie</a></li>
              </ul>
            </div>
          </div>
          <div className="mt-12 pt-8 border-t border-border text-center text-sm text-muted-foreground">
            <p>¬© 2024 √âlite. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
          </div>
        </div>
      </footer>
    </div>
  );
};

const Index = () => {
  return (
    <GoogleOAuthProvider clientId="YOUR_GOOGLE_CLIENT_ID.apps.googleusercontent.com">
      <IndexContent />
    </GoogleOAuthProvider>
  );
};

export default Index;